function each(callback)
  for item of this
    callback item
  end
end

function Array::append(item) = [...this, item]

case function zip
when (first, second)
  first.map((x, i) => [x, second[i]])
when Array::(second)
  zip this, second
end

case function to_a
when Array::()
  this
when String::()
  Array.from this
when Set::()
  Array.from this
when Object::()
  Object.entries this
end

function Array::uniq() =
  this.filter((item1, i) => i == this.findIndex(item2 => item1 == item2))
