require "ast"

def parse(str)
  tokens = Lexer::tokenize(str.strip)
  Parser.reset_unused_count!
  ast = Parser.new(tokens).parse!
  AST::remove_numbers(ast)
end

def ast_eq(ast)
  eq(AST::remove_numbers(ast))
end

context "snapshot" do
  it "2022-02-14 11:19:23 -0500" do
    ast = parse("obj := { *{ a: 3 }, b: 10 }

print(obj)")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "obj", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 20, :value => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 10 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => nil, :column => nil, :value => "splat" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 12, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => nil, :column => nil, :value => "index" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "obj" }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 12:06:01 -0500" do
    ast = parse("schema Point = [x, y]
Point([x, y]) := [1, 2]
print(x, y)")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "Point", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "x" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "y" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } } }, { :node_type => :if, :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Point" }, :property => { :node_type => :str_lit, :value => "valid_q" } } }, :pass => [{ :node_type => :assign, :sym => "__VALUE", :expr => { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "x", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "y", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }], :fail => [{ :node_type => :throw, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "Match error" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } } }] }, { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "x" }, { :node_type => :identifier_lookup, :sym => "y" }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 12:06:41 -0500" do
    ast = parse("d := <h1></h1>")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "d", :expr => { :node_type => :html_tag, :name => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => nil, :column => nil, :value => "h1" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Str" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :attributes => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :record_lit, :line => nil, :column => nil, :value => {} }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Record" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :children => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } } }])
  end
  it "2022-02-14 12:07:06 -0500" do
    ast = parse("val := nil
print(val.nil?)")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "val", :expr => { :node_type => :function_call, :args => [{ :node_type => :nil_lit }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Nil" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "val" }, :property => { :node_type => :str_lit, :value => "nil?" } } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 12:07:33 -0500" do
    ast = parse("obj.add 1, 3")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "obj" }, :property => { :node_type => :str_lit, :value => "add" } } }])
  end
  it "2022-02-14 12:07:44 -0500" do
    ast = parse("num := 5.3
inspect.print num.to_i")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "num", :expr => { :node_type => :function_call, :args => [{ :node_type => :float_lit, :value => 5.3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Float" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "num" }, :property => { :node_type => :str_lit, :value => "to_i" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "inspect" }, :property => { :node_type => :str_lit, :value => "print" } } }])
  end
  it "2022-02-14 12:08:16 -0500" do
    ast = parse('print("  ".trim)')
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "  " }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "trim" } } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 12:09:31 -0500" do
    ast = parse('a := 1

print("oh #{a} #{a + 1}")')
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "a" }, :property => { :node_type => :str_lit, :value => "__plus__" } } }, :property => { :node_type => :str_lit, :value => "to_s" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => " " }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "a" }, :property => { :node_type => :str_lit, :value => "to_s" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "oh " }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "__plus__" } } }, :property => { :node_type => :str_lit, :value => "__plus__" } } }, :property => { :node_type => :str_lit, :value => "__plus__" } } }, :property => { :node_type => :str_lit, :value => "__plus__" } } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 12:10:05 -0500" do
    ast = parse('v := {
  [1]: "this is ON",
  [false]: "off",
  sym: 3,
  ["str"]: 3
}
print(v)')
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "v", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :int_lit, :line => 1, :column => 4, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Int" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "this is ON" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :bool_lit, :line => 2, :column => 4, :value => false }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Bool" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "off" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 3, :column => 3, :value => "sym" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => 4, :column => 4, :value => "str" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Str" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "v" }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 12:12:04 -0500" do
    ast = parse("[{ b: { a } }] := [{ b: { a: 1 } }]
print(a)")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :if, :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 21, :value => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 26, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 3, :value => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 8, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :identifier_lookup, :sym => "a" } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :property => { :node_type => :str_lit, :value => "valid_q" } } }, :pass => [{ :node_type => :assign, :sym => "__VALUE", :expr => { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 21, :value => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 26, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } }, :property => { :node_type => :str_lit, :value => "__lookup__" } } }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }], :fail => [{ :node_type => :throw, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "Match error" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } } }] }, { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "a" }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 12:13:57 -0500" do
    ast = parse("[x, y] := [1, 2]
print(x, y)")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :if, :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :identifier_lookup, :sym => "x" }, { :node_type => :identifier_lookup, :sym => "y" }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :property => { :node_type => :str_lit, :value => "valid_q" } } }, :pass => [{ :node_type => :assign, :sym => "__VALUE", :expr => { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "x", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "y", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }], :fail => [{ :node_type => :throw, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "Match error" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } } }] }, { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "x" }, { :node_type => :identifier_lookup, :sym => "y" }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 12:14:30 -0500" do
    ast = parse("{a} := {a: 3}
print(a)")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :if, :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 8, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 1, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :identifier_lookup, :sym => "a" } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :property => { :node_type => :str_lit, :value => "valid_q" } } }, :pass => [{ :node_type => :assign, :sym => "__VALUE", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 8, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }], :fail => [{ :node_type => :throw, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "Match error" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } } }] }, { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "a" }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 12:15:32 -0500" do
    ast = parse('a := "#{if true then :result end}"
print(a)')
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :function, :args => [], :body => [{ :node_type => :if, :expr => { :node_type => :function_call, :args => [{ :node_type => :bool_lit, :value => true }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Bool" }, :property => { :node_type => :str_lit, :value => "new" } } }, :pass => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "result" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } } }], :fail => [] }] } }, :property => { :node_type => :str_lit, :value => "to_s" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "__plus__" } } }, :property => { :node_type => :str_lit, :value => "__plus__" } } } }, { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "a" }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 12:15:49 -0500" do
    ast = parse('a := "string #{"inside"} outside"
print(a)')
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => " outside" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "inside" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "to_s" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "string " }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "__plus__" } } }, :property => { :node_type => :str_lit, :value => "__plus__" } } } }, { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "a" }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 12:19:40 -0500" do
    ast = parse("console.log(<div>{[1, 2].map do |x| x * 3 end}</div>)")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :function_call, :args => [{ :node_type => :html_tag, :name => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => nil, :column => nil, :value => "div" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Str" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :attributes => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :record_lit, :line => nil, :column => nil, :value => {} }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Record" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :children => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [{ :node_type => :function_call, :line => 0, :column => 24, :args => [{ :node_type => :function, :line => 0, :column => 29, :args => [{ :node_type => :function_argument, :line => 0, :column => 33, :sym => "x" }], :body => [{ :node_type => :return, :line => 0, :column => 38, :expr => { :node_type => :function_call, :line => 0, :column => 38, :args => [{ :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :int_lit, :line => 0, :column => 40, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Int" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => 0, :column => 36, :sym => "x" }, :line => 0, :column => 42, :property => { :line => 0, :column => 38, :node_type => :str_lit, :value => "__mult__" } } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => 0, :column => 18, :value => [{ :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :int_lit, :line => 0, :column => 19, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Int" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :int_lit, :line => 0, :column => 22, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Int" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :line => 0, :column => 24, :property => { :line => 0, :column => 25, :node_type => :str_lit, :value => "map" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "console" }, :property => { :node_type => :str_lit, :value => "log" } } }])
  end
  it "2022-02-14 12:28:00 -0500" do
    ast = parse("a := (false == true) || [1, 2].has?(2)
print(a)")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "has?" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :paren_expr, :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :bool_lit, :value => true }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Bool" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :bool_lit, :value => false }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Bool" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "__eq__" } } } }, :property => { :node_type => :str_lit, :value => "__or__" } } } }, { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "a" }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 12:28:26 -0500" do
    ast = parse("a := false == true || [1, 2]
print(a)")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :bool_lit, :value => true }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Bool" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :bool_lit, :value => false }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Bool" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "__eq__" } } }, :property => { :node_type => :str_lit, :value => "__or__" } } } }, { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "a" }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 12:28:44 -0500" do
    ast = parse("a := [3, 3]
b := nil
print(a&.size, b&.size)")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "b", :expr => { :node_type => :function_call, :args => [{ :node_type => :nil_lit }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Nil" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "a" }, :property => { :node_type => :str_lit, :value => "size" } } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "a" }, :property => { :node_type => :str_lit, :value => "__and__" } } }, { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "b" }, :property => { :node_type => :str_lit, :value => "size" } } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "b" }, :property => { :node_type => :str_lit, :value => "__and__" } } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:10:20 -0500" do
    ast = parse('<div>{arr.map #{<Child text={%} />}}</div>')
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :html_tag, :name => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => nil, :column => nil, :value => "div" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Str" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :attributes => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :record_lit, :line => nil, :column => nil, :value => {} }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Record" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :children => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [{ :node_type => :function_call, :line => 0, :column => 9, :args => [{ :node_type => :function, :line => 0, :column => 14, :args => [{ :node_type => :function_argument, :line => 0, :column => 14, :sym => "__ANON_SHORT_ID" }], :body => [{ :node_type => :return, :line => 0, :column => 14, :expr => { :node_type => :function_call, :line => 0, :column => 16, :args => [{ :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :record_lit, :line => nil, :column => nil, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => nil, :column => nil, :value => "text" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :identifier_lookup, :line => 0, :column => 29, :sym => "__ANON_SHORT_ID" } } }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Record" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => 0, :column => 16, :sym => "Child" }, :line => nil, :column => nil, :property => { :line => 0, :column => 16, :node_type => :str_lit, :value => "new" } } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => 0, :column => 6, :sym => "arr" }, :line => 0, :column => 9, :property => { :line => 0, :column => 10, :node_type => :str_lit, :value => "map" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } }])
  end
  it "2022-02-14 14:10:46 -0500" do
    ast = parse("<Child margin={i < l.last_index} />")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => nil, :column => nil, :value => "margin" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "l" }, :property => { :node_type => :str_lit, :value => "last_index" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "i" }, :property => { :node_type => :str_lit, :value => "__lt__" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Child" }, :property => { :node_type => :str_lit, :value => "new" } } }])
  end
  it "2022-02-14 14:11:06 -0500" do
    ast = parse("<Child margin={i < l.last_index} other_prop={3} />")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => nil, :column => nil, :value => "margin" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "l" }, :property => { :node_type => :str_lit, :value => "last_index" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "i" }, :property => { :node_type => :str_lit, :value => "__lt__" } } }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => nil, :column => nil, :value => "other_prop" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Child" }, :property => { :node_type => :str_lit, :value => "new" } } }])
  end
  it "2022-02-14 14:11:52 -0500" do
    ast = parse('arr := [{ a: 5 }]
print(arr.find #{ %[:a] == 3 }&[:a])')
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "arr", :expr => { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 10, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 5 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__ANON_SHORT_ID" }], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__ANON_SHORT_ID" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } }, :property => { :node_type => :str_lit, :value => "__eq__" } } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "arr" }, :property => { :node_type => :str_lit, :value => "find" } } }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__ANON_SHORT_ID" }], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__ANON_SHORT_ID" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } }, :property => { :node_type => :str_lit, :value => "__eq__" } } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "arr" }, :property => { :node_type => :str_lit, :value => "find" } } }, :property => { :node_type => :str_lit, :value => "__and__" } } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:12:06 -0500" do
    ast = parse("console.log 1.to_js, 2.to_js")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "to_js" } } }, { :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "to_js" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "console" }, :property => { :node_type => :str_lit, :value => "log" } } }])
  end
  it "2022-02-14 14:12:22 -0500" do
    ast = parse("a := if true then 3 end
print(a)")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :function, :args => [], :body => [{ :node_type => :if, :expr => { :node_type => :function_call, :args => [{ :node_type => :bool_lit, :value => true }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Bool" }, :property => { :node_type => :str_lit, :value => "new" } } }, :pass => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } }], :fail => [] }] } } }, { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "a" }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:12:50 -0500" do
    ast = parse("def f
  1 + 3
end
print(f())")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :declare, :sym => "f", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "__plus__" } } } }] } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [], :expr => { :node_type => :identifier_lookup, :sym => "f" } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:13:02 -0500" do
    ast = parse("def f(a, b)
  a + b
end

print(f(1, 2))")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :declare, :sym => "f", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "b", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "a" }, :property => { :node_type => :str_lit, :value => "__plus__" } } } }] } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :identifier_lookup, :sym => "f" } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:13:12 -0500" do
    ast = parse("def f(a, b) = a + b

print(f(1, 2))")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :declare, :sym => "f", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "b", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "a" }, :property => { :node_type => :str_lit, :value => "__plus__" } } } }] } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :identifier_lookup, :sym => "f" } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:15:13 -0500" do
    ast = parse("class Num
  def init(val)
    @val := val
  end
  def add(other) = @val + other
end

print(Num.new(10).add 10)")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :class, :sym => "Num", :super_class => nil, :methods => [{ :node_type => :declare, :sym => "init", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "val" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "val", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :instance_assign, :sym => "val", :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "val" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :function_call, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "val" } } } } }] } }, { :node_type => :declare, :sym => "add", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "other" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "other", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "other" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :function_call, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "other" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :instance_lookup, :sym => "val" }, :property => { :node_type => :str_lit, :value => "__plus__" } } } }] } }] }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 10 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 10 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Num" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "add" } } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:15:27 -0500" do
    ast = parse('class BaseNum
  def init(val)
    @val := val
  end
  def to_s = @val.to_s
end

class Num < BaseNum
  def to_s_2 = @to_s() + " oh wow"
end

print(Num.new(3).to_s_2)')
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :class, :sym => "BaseNum", :super_class => nil, :methods => [{ :node_type => :declare, :sym => "init", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "val" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "val", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :instance_assign, :sym => "val", :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "val" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :function_call, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "val" } } } } }] } }, { :node_type => :declare, :sym => "to_s", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :instance_lookup, :sym => "val" }, :property => { :node_type => :str_lit, :value => "to_s" } } } }] } }] }, { :node_type => :class, :sym => "Num", :super_class => "BaseNum", :methods => [{ :node_type => :declare, :sym => "to_s_2", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => " oh wow" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :instance_lookup, :sym => "to_s" } }, :property => { :node_type => :str_lit, :value => "__plus__" } } } }] } }] }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Num" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "to_s_2" } } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:16:06 -0500" do
    ast = parse("class Test
  def a = 3
  def get_arg(a) = a
  def get_method = a
end

print(
  Test.new.get_arg(50),
  Test.new.get_method
)")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :class, :sym => "Test", :super_class => nil, :methods => [{ :node_type => :declare, :sym => "a", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } }] } }, { :node_type => :declare, :sym => "get_arg", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "a" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :function_call, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "a" } } } }] } }, { :node_type => :declare, :sym => "get_method", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :return, :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "a" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :function_call, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "a" } } } }] } }] }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 50 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Test" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "get_arg" } } }, { :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Test" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "get_method" } } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:16:19 -0500" do
    ast = parse("class Test
  def a = 3
  def get_arg(a) = a
end

class TestB
  def a = 3
  def get_method = a
end

print(
  Test.new.get_arg(5),
  TestB.new.get_method
)")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :class, :sym => "Test", :super_class => nil, :methods => [{ :node_type => :declare, :sym => "a", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } }] } }, { :node_type => :declare, :sym => "get_arg", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "a" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :function_call, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "a" } } } }] } }] }, { :node_type => :class, :sym => "TestB", :super_class => nil, :methods => [{ :node_type => :declare, :sym => "a", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } }] } }, { :node_type => :declare, :sym => "get_method", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :return, :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "a" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :function_call, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "a" } } } }] } }] }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 5 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Test" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "get_arg" } } }, { :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "TestB" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "get_method" } } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:16:32 -0500" do
    ast = parse("class Test
  def f({ b }) = b
end

print(Test.new.f {b: 3})")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :class, :sym => "Test", :super_class => nil, :methods => [{ :node_type => :declare, :sym => "f", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 1, :column => 11, :value => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => nil }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "b", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "b" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :function_call, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "b" } } } }] } }] }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 4, :column => 19, :value => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Test" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "f" } } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:23:10 -0500" do
    ast = parse("def f
  return 2 if true
end
print(f())")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :declare, :sym => "f", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :if, :expr => { :node_type => :function_call, :args => [{ :node_type => :bool_lit, :value => true }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Bool" }, :property => { :node_type => :str_lit, :value => "new" } } }, :pass => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } }], :fail => [] }] } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [], :expr => { :node_type => :identifier_lookup, :sym => "f" } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:28:20 -0500" do
    ast = parse('class Child < Element
  def init_state = false
  def view(props, state, _)
    <div>
      <button onclick=#{set_state !state}>click me</button>
      {state}
      {props[:hmm]}
    </div>
  end
end


class Main < Element
  def init_state = "wow"
  def view(_, state, _)
    set_timeout(#{set_state "oh"}, 2000)
    <div>
      <Child hmm={state}/>
    </div>
  end
end')
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :class, :sym => "Child", :super_class => "Element", :methods => [{ :node_type => :declare, :sym => "init_state", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :bool_lit, :value => false }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Bool" }, :property => { :node_type => :str_lit, :value => "new" } } } }] } }, { :node_type => :declare, :sym => "view", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "props" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "state" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_0" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "props", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "state", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "_0", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :html_tag, :name => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => nil, :column => nil, :value => "div" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Str" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :attributes => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :record_lit, :line => nil, :column => nil, :value => {} }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Record" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :children => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [{ :node_type => :html_tag, :name => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => nil, :column => nil, :value => "button" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Str" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :attributes => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :record_lit, :line => nil, :column => nil, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => nil, :column => nil, :value => "onclick" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function, :line => 4, :column => 23, :args => [{ :node_type => :function_argument, :line => 4, :column => 23, :sym => "__ANON_SHORT_ID" }], :body => [{ :node_type => :return, :line => 4, :column => 23, :expr => { :node_type => :function_call, :line => 4, :column => 25, :args => [{ :node_type => :function_call, :line => nil, :column => nil, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :function, :line => nil, :column => nil, :args => [], :body => [{ :node_type => :return, :line => nil, :column => nil, :expr => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => 4, :column => 36, :value => "state" }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "__try" } }, :rhs => { :node_type => :function_call, :line => 4, :column => 36, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "state", :line => 4, :column => 36 } } }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "bang" } } }], :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :function, :line => nil, :column => nil, :args => [], :body => [{ :node_type => :return, :line => nil, :column => nil, :expr => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => 4, :column => 25, :value => "set_state" }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "__try" } }, :rhs => { :node_type => :instance_method_lookup, :sym => "set_state", :line => 4, :column => 25 } } } }] } } }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Record" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :children => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [{ :node_type => :html_text_node, :value => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => nil, :column => nil, :value => "click me" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Str" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :line => nil, :column => nil }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :line => 4, :column => 7 }, { :node_type => :naked_or, :lhs => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :function, :line => nil, :column => nil, :args => [], :body => [{ :node_type => :return, :line => nil, :column => nil, :expr => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => 5, :column => 8, :value => "state" }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "__try" } }, :rhs => { :node_type => :function_call, :line => 5, :column => 8, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "state", :line => 5, :column => 8 } } }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 6, :column => 14, :value => "hmm" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :function, :line => nil, :column => nil, :args => [], :body => [{ :node_type => :return, :line => nil, :column => nil, :expr => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => 6, :column => 8, :value => "props" }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "__try" } }, :rhs => { :node_type => :function_call, :line => 6, :column => 8, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "props", :line => 6, :column => 8 } } }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "__lookup__" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } } }] } }] }, { :node_type => :class, :sym => "Main", :super_class => "Element", :methods => [{ :node_type => :declare, :sym => "init_state", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "wow" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } } }] } }, { :node_type => :declare, :sym => "view", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_1" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "state" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_2" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "_1", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "state", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "_2", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :function_call, :args => [{ :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__ANON_SHORT_ID" }], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "oh" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "set_state" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :instance_method_lookup, :sym => "set_state" } } } }] }, { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2000 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "set_timeout" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :instance_method_lookup, :sym => "set_timeout" } } }, { :node_type => :return, :expr => { :node_type => :html_tag, :name => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => nil, :column => nil, :value => "div" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Str" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :attributes => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :record_lit, :line => nil, :column => nil, :value => {} }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Record" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :children => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [{ :node_type => :function_call, :line => 17, :column => 7, :args => [{ :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :record_lit, :line => nil, :column => nil, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => nil, :column => nil, :value => "hmm" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :function, :line => nil, :column => nil, :args => [], :body => [{ :node_type => :return, :line => nil, :column => nil, :expr => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => 17, :column => 19, :value => "state" }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "__try" } }, :rhs => { :node_type => :function_call, :line => 17, :column => 19, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "state", :line => 17, :column => 19 } } } } }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Record" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => 17, :column => 7, :sym => "Child" }, :line => nil, :column => nil, :property => { :line => 17, :column => 7, :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } } }] } }] }])
  end
  it "2022-02-14 14:33:39 -0500" do
    ast = parse('def f(3) = "oh"
def f(a) = a
def f(a, b) = a + b

print(f(5), f(3), f(3, 5))')
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :declare, :sym => "f", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "oh" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } } }] } }, { :node_type => :declare, :sym => "f", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :identifier_lookup, :sym => "a" } }] } }, { :node_type => :declare, :sym => "f", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "b", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "a" }, :property => { :node_type => :str_lit, :value => "__plus__" } } } }] } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 5 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :identifier_lookup, :sym => "f" } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :identifier_lookup, :sym => "f" } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 5 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :identifier_lookup, :sym => "f" } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:33:53 -0500" do
    ast = parse('class Test
  def f({ a }) = a
  def f([a]) = a
end

print(Test.new.f([1]), Test.new.f({ a: "oh"}))')
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :class, :sym => "Test", :super_class => nil, :methods => [{ :node_type => :declare, :sym => "f", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 1, :column => 11, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => nil }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "a" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :function_call, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "a" } } } }] } }, { :node_type => :declare, :sym => "f", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "a" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :function_call, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "a" } } } }] } }] }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Test" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "f" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 5, :column => 37, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "oh" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Test" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "f" } } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:35:29 -0500" do
    ast = parse('class Main < Element
  def style(_, is_on, _) = "
    cursor: pointer;
    background: #{if is_on then "#f00" else "#fff" end};
  "
  def init_state = false
  def text(val) = {
    [true]: "this is ON",
    [false]: "off like off"
  }[val]
  def view(_, is_on, _)
    <div onclick=#{set_state !is_on}>
      {text is_on}
    </div>
  end
end')
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :class, :sym => "Main", :super_class => "Element", :methods => [{ :node_type => :declare, :sym => "style", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_0" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "is_on" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_1" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "_0", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "is_on", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "_1", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => ";\n  " }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :function, :args => [], :body => [{ :node_type => :if, :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "is_on" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :function_call, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "is_on" } } }, :pass => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "#f00" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } } }], :fail => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "#fff" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } } }] }] } }, :property => { :node_type => :str_lit, :value => "to_s" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "\n    cursor: pointer;\n    background: " }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "__plus__" } } }, :property => { :node_type => :str_lit, :value => "__plus__" } } } }] } }, { :node_type => :declare, :sym => "init_state", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :bool_lit, :value => false }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Bool" }, :property => { :node_type => :str_lit, :value => "new" } } } }] } }, { :node_type => :declare, :sym => "text", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "val" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "val", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "val" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :function_call, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "val" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :bool_lit, :line => 7, :column => 6, :value => true }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Bool" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "this is ON" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :bool_lit, :line => 8, :column => 6, :value => false }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Bool" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "off like off" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }] } }, { :node_type => :declare, :sym => "view", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_2" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "is_on" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_3" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "_2", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "is_on", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "_3", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :html_tag, :name => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => nil, :column => nil, :value => "div" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Str" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :attributes => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :record_lit, :line => nil, :column => nil, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => nil, :column => nil, :value => "onclick" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function, :line => 11, :column => 18, :args => [{ :node_type => :function_argument, :line => 11, :column => 18, :sym => "__ANON_SHORT_ID" }], :body => [{ :node_type => :return, :line => 11, :column => 18, :expr => { :node_type => :function_call, :line => 11, :column => 20, :args => [{ :node_type => :function_call, :line => nil, :column => nil, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :function, :line => nil, :column => nil, :args => [], :body => [{ :node_type => :return, :line => nil, :column => nil, :expr => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => 11, :column => 31, :value => "is_on" }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "__try" } }, :rhs => { :node_type => :function_call, :line => 11, :column => 31, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "is_on", :line => 11, :column => 31 } } }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "bang" } } }], :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :function, :line => nil, :column => nil, :args => [], :body => [{ :node_type => :return, :line => nil, :column => nil, :expr => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => 11, :column => 20, :value => "set_state" }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "__try" } }, :rhs => { :node_type => :instance_method_lookup, :sym => "set_state", :line => 11, :column => 20 } } } }] } } }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Record" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :children => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [{ :node_type => :function_call, :line => 12, :column => 8, :args => [{ :node_type => :naked_or, :lhs => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :function, :line => nil, :column => nil, :args => [], :body => [{ :node_type => :return, :line => nil, :column => nil, :expr => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => 12, :column => 13, :value => "is_on" }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "__try" } }, :rhs => { :node_type => :function_call, :line => 12, :column => 13, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "is_on", :line => 12, :column => 13 } } }], :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :function, :line => nil, :column => nil, :args => [], :body => [{ :node_type => :return, :line => nil, :column => nil, :expr => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => 12, :column => 8, :value => "text" }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "__try" } }, :rhs => { :node_type => :instance_method_lookup, :sym => "text", :line => 12, :column => 8 } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } } }] } }] }])
  end
  it "2022-02-14 14:53:16 -0500" do
    ast = parse('schema User = { id }

def f(User) = 3

print(f({ id: "value" }))')
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "User", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 16, :value => "id" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => nil }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } } }, { :node_type => :declare, :sym => "f", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "User" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } }] } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 4, :column => 11, :value => "id" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "value" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :identifier_lookup, :sym => "f" } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:53:33 -0500" do
    ast = parse("schema User = { id }

def f({ user: User }) = 3

print(f({ user: { id: 3 } }))")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "User", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 16, :value => "id" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => nil }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } } }, { :node_type => :declare, :sym => "f", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 2, :column => 9, :value => "user" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :identifier_lookup, :sym => "User" } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "user", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "user" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } }] } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 4, :column => 11, :value => "user" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 4, :column => 19, :value => "id" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :identifier_lookup, :sym => "f" } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:55:29 -0500" do
    File.write("rspec_child.pea", "export class Child < Element
      def style(_, is_on, _) = \"cursor: pointer;\"
      def view(_, _, _)
        <div>child tests!</div>
      end
    end
    ")
    ast = parse('import { Child } from "./rspec_child"

class Main < Element
  def style(_, is_on, _) = "cursor: pointer;"
  def view(_, _, _)
    <div>
      <Child />
    </div>
  end
end')
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "e1808113a2c1ccc081859f92fe31494c177c71bc", :expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :function, :args => [], :body => [{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :class, :sym => "Child", :super_class => "Element", :methods => [{ :node_type => :declare, :sym => "style", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_0" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "is_on" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_1" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "_0", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "is_on", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "_1", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "cursor: pointer;" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } } }] } }, { :node_type => :declare, :sym => "view", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_2" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_3" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_4" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "_2", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "_3", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "_4", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :html_tag, :name => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => nil, :column => nil, :value => "div" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Str" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :attributes => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :record_lit, :line => nil, :column => nil, :value => {} }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Record" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :children => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [{ :node_type => :html_text_node, :value => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => nil, :column => nil, :value => "child tests!" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Str" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :line => nil, :column => nil }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } } }] } }] }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "Child" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }, { :node_type => :identifier_lookup, :sym => "Child" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "pea_module" }, :property => { :node_type => :str_lit, :value => "__unsafe_insert__" } } }, { :node_type => :return, :expr => { :node_type => :identifier_lookup, :sym => "pea_module" } }] } } }, { :node_type => :if, :expr => { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "e1808113a2c1ccc081859f92fe31494c177c71bc" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 9, :value => "Child" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => nil }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :property => { :node_type => :str_lit, :value => "valid_q" } } }, :pass => [{ :node_type => :assign, :sym => "__VALUE", :expr => { :node_type => :identifier_lookup, :sym => "e1808113a2c1ccc081859f92fe31494c177c71bc" } }, { :node_type => :assign, :sym => "Child", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "Child" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }], :fail => [{ :node_type => :throw, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "Match error" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } } }] }, { :node_type => :class, :sym => "Main", :super_class => "Element", :methods => [{ :node_type => :declare, :sym => "style", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_5" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "is_on" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_6" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "_5", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "is_on", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "_6", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "cursor: pointer;" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } } }] } }, { :node_type => :declare, :sym => "view", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_7" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_8" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "_9" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "_7", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "_8", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :assign, :sym => "_9", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 2 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :html_tag, :name => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :str_lit, :line => nil, :column => nil, :value => "div" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Str" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :attributes => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :record_lit, :line => nil, :column => nil, :value => {} }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Record" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }, :children => { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [{ :node_type => :function_call, :line => 6, :column => 7, :args => [{ :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :record_lit, :line => nil, :column => nil, :value => {} }, { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :array_lit, :line => nil, :column => nil, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Record" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => 6, :column => 7, :sym => "Child" }, :line => nil, :column => nil, :property => { :line => 6, :column => 7, :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "List" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } } }] } }] }])
  end
  it "2022-02-14 14:57:02 -0500" do
    ast = parse('test := case 1
when 1
  "test"
end

print(test)')
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "test", :expr => { :node_type => :case, :expr => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }, :cases => { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 1 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "match_expr" }], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "test" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Str" }, :property => { :node_type => :str_lit, :value => "new" } } } }] }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "test" }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:57:33 -0500" do
    ast = parse("schema User = { id }

val := case { id: 4 }
when User({ id })
  id
end

print(val)")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :assign, :sym => "User", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 0, :column => 16, :value => "id" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => nil }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } } }, { :node_type => :assign, :sym => "val", :expr => { :node_type => :case, :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 2, :column => 15, :value => "id" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 4 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }, :cases => { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "User" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "match_expr" }], :body => [{ :node_type => :assign, :sym => "id", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "id" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "match_expr" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :identifier_lookup, :sym => "id" } }] }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :identifier_lookup, :sym => "val" }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
  it "2022-02-14 14:57:58 -0500" do
    ast = parse("class Test
  def f(a) = case a
    when {b}
      b
    end
end

print(Test.new.f {b: 3})")
    expect(ast).to ast_eq([{ :node_type => :assign, :sym => "pea_module", :expr => { :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => {} }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } } }, { :node_type => :class, :sym => "Test", :super_class => nil, :methods => [{ :node_type => :declare, :sym => "f", :schema => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "a" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, :expr => { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "__VALUE" }], :body => [{ :node_type => :assign, :sym => "a", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 0 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "__VALUE" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :case, :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "a" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :function_call, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "a" } } }, :cases => { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 2, :column => 11, :value => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => nil }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "any" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Schema" }, :property => { :node_type => :str_lit, :value => "for" } } }, { :node_type => :function, :args => [{ :node_type => :function_argument, :sym => "match_expr" }], :body => [{ :node_type => :assign, :sym => "b", :expr => { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :symbol, :value => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Sym" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "match_expr" }, :property => { :node_type => :str_lit, :value => "__lookup__" } } } }, { :node_type => :return, :expr => { :node_type => :naked_or, :lhs => { :node_type => :function_call, :args => [{ :node_type => :function, :args => [], :body => [{ :node_type => :return, :expr => { :node_type => :function_call, :args => [{ :node_type => :str_lit, :value => "b" }], :expr => { :node_type => :identifier_lookup, :sym => "eval" } } }] }], :expr => { :node_type => :identifier_lookup, :sym => "__try" } }, :rhs => { :node_type => :function_call, :args => [], :expr => { :node_type => :instance_method_lookup, :sym => "b" } } } }] }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } } } }] } }] }, { :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :function_call, :args => [{ :node_type => :record_lit, :value => { { :node_type => :function_call, :line => nil, :column => nil, :args => [{ :node_type => :symbol, :line => 7, :column => 19, :value => "b" }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :line => nil, :column => nil, :sym => "Sym" }, :line => nil, :column => nil, :property => { :line => nil, :column => nil, :node_type => :str_lit, :value => "new" } } } => { :node_type => :function_call, :args => [{ :node_type => :int_lit, :value => 3 }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Int" }, :property => { :node_type => :str_lit, :value => "new" } } } } }, { :node_type => :function_call, :args => [{ :node_type => :array_lit, :value => [] }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "List" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Record" }, :property => { :node_type => :str_lit, :value => "new" } } }], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :function_call, :args => [], :expr => { :node_type => :property_lookup, :lhs_expr => { :node_type => :identifier_lookup, :sym => "Test" }, :property => { :node_type => :str_lit, :value => "new" } } }, :property => { :node_type => :str_lit, :value => "f" } } }], :expr => { :node_type => :identifier_lookup, :sym => "print" } }])
  end
end
