Spec.new Record do |c|
  c.it "#__plus__" do
    expect({ a: 10 } + { b: 20 }).to eq({ a: 10, b: 20 })
  end

  c.it "#__minus__" do
    expect({ a: 3 } - [:a]).to eq({})
  end

  c.it "lookup on literal" do
    expect({ a: "str"}[:a]).to eq("str")
  end
  
  c.it "lookup on var" do
    r := { a: "str"}
    expect(r[:a]).to eq("str")
  end

  c.it "lookup with a string" do
    r := { ["key"]: "str"}
    expect(r["key"]).to eq("str")
  end

  c.it "splat on literal" do
    expect({ *{ a: 3 }, b: 10 }).to eq({ a: 3, b: 10 })
  end

  c.it "splat on lookup" do
    obj := { a: 3 }
    expect({ *obj, b: 10 }).to eq({ a: 3, b: 10 })
  end

  c.it "splat duplicate key - splat first" do
    expect({ *{ a: 3 }, a: 10 }).to eq({ a: 10 })
  end

  c.it "splat duplicate key - splat after" do
    expect({ a: 10, *{ a: 3 } }).to eq({ a: 3 })
  end

  c.it "#to_l" do
    expect({a: 3, b: 5}.to_l).to eq([[:a, 3], [:b, 5]])
  end
end
